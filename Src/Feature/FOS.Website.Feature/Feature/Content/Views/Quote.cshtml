@using Sitecore.Mvc
@using DynamicPlaceholders.Mvc.Extensions
@using Sitecore.Mvc.Presentation
@using Synthesis.Mvc.Helpers
@model FOS.Website.Feature.Content.Models.QuoteModel
@{
    Layout = null;
    if (Model == null || Model.QuoteItem == null)
    {
        <div>Please configure this.</div>
        return;
    }

    //TODO: check whether this is contained or not - and set defaults accordingly.
    string defaultAlignment = String.Empty;
    string defaultSize = String.Empty;
    string defaultContained = String.Empty;

    if (!Model.IsContained)
    {
        defaultSize = "large";
        defaultAlignment = "left";
    }

    string cssClassPrefix = "quote--";
    string alignmentClass = String.IsNullOrWhiteSpace(Model.AlignmentClass) ? defaultAlignment : cssClassPrefix + Model.AlignmentClass;
    string sizeClass = String.IsNullOrWhiteSpace(Model.SizeClass) ? defaultSize : cssClassPrefix + Model.SizeClass;
    string containedClass = !Model.IsContained ? defaultContained : cssClassPrefix + "contained";
    string wrapperStart = "<div class='wrapper'>";
    string wrapperEnd = "</div>";
}

@if (!@Model.IsContained) { <text>@Html.Raw(wrapperStart)</text> }
    <div class="quote @alignmentClass @sizeClass @containedClass">
        <blockquote class="quote__content">
            @Html.TextFor(m => m.QuoteItem.Content_Quote)
        </blockquote>
        <cite class="quote__cite">
            @Html.TextFor(m => m.QuoteItem.Content_QuoteAuthor)
        </cite>
    </div>
@if (!@Model.IsContained){<text>@Html.Raw(wrapperEnd)</text>}